package com.domain;
// Generated Apr 16, 2015 12:48:29 PM by Hibernate Tools 4.3.1

import com.domain.enums.AccountStatus;
import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name="account"
    ,catalog="revised_cws_db"
)
public class Account  implements java.io.Serializable {

    @Id @GeneratedValue(strategy=IDENTITY)
    @Column(name="id", unique=true, nullable=false)
    private Long id;
    @Column(name="number", unique=true, nullable=false)
    private String number;
    @ManyToOne(fetch=FetchType.EAGER, cascade={CascadeType.PERSIST, CascadeType.MERGE})
    @JoinColumn(name="customer_id", nullable=false)
    private Customer customer; 
    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="address_id", nullable=false)
    private Address address;
    @Column(name="account_type", nullable=true, length=45)
    private String accountType;
    @Column(name="account_standing_balance", nullable=false, precision=9)
    private BigDecimal accountStandingBalance = new BigDecimal(0.00);
    @Column(name="penalty", nullable=false, precision=9)
    private BigDecimal penalty = new BigDecimal(0.00);
    @Enumerated(EnumType.STRING)
    @Column(name="status", nullable=false)
    private AccountStatus status = AccountStatus.ACTIVE;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="account", cascade={CascadeType.PERSIST, CascadeType.MERGE})
    private Set<MeterReading> meterReadings = new HashSet<MeterReading>(0);
    @OneToMany(fetch=FetchType.LAZY, mappedBy="account", cascade={CascadeType.PERSIST, CascadeType.MERGE})
    private Set<Payment> payments = new HashSet<Payment>(0);
    @OneToMany(fetch=FetchType.LAZY, mappedBy="account", cascade={CascadeType.PERSIST, CascadeType.MERGE})
    private Set<Invoice> invoices = new HashSet<Invoice>(0);
    @OneToMany(fetch=FetchType.LAZY, mappedBy="owner", cascade={CascadeType.PERSIST, CascadeType.MERGE})
    private Set<Device> devices = new HashSet<Device>(0);
    
    public Account() { }

    public Account(String number, Customer customer, Address address) {
        this.number = number;
        this.customer = customer;
        this.address = address;
    }
        
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

    public String getNumber() {
        return number;
    }

    public void setNumber(String number) {
        this.number = number;
    }
    
    public AccountStatus getStatus() {
        return status;
    }

    public void setStatus(AccountStatus status) {
        this.status = status;
    }
    
    @JsonManagedReference
    public Address getAddress() {
        return address;
    }
    @JsonProperty
    public void setAddress(Address address) {
        this.address = address;
    }
    @JsonManagedReference
    public Customer getCustomer() {
        return this.customer;
    }
    @JsonProperty
    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

    public String getAccountType() {
        return this.accountType;
    }
    
    public void setAccountType(String accountType) {
        this.accountType = accountType;
    }

    public BigDecimal getAccountStandingBalance() {
        return this.accountStandingBalance;
    }
    
    public void setAccountStandingBalance(BigDecimal accountStandingBalance) {
        this.accountStandingBalance = accountStandingBalance;
    }
    @JsonBackReference
    public Set<MeterReading> getMeterReadings() {
        return this.meterReadings;
    }
    @JsonProperty
    public void setMeterReadings(Set<MeterReading> meterReadings) {
        this.meterReadings = meterReadings;
    }

    @JsonBackReference
    public Set<Payment> getPayments() {
        return this.payments;
    }
    @JsonProperty
    public void setPayments(Set<Payment> payments) {
        this.payments = payments;
    }
    @JsonBackReference
    public Set<Invoice> getInvoices() {
        return this.invoices;
    }
    @JsonProperty
    public void setInvoices(Set<Invoice> invoices) {
        this.invoices = invoices;
    }

    public void addMeterReading(MeterReading reading){
        meterReadings.add(reading);
    }

    public BigDecimal getPenalty() {
        return penalty;
    }

    public void setPenalty(BigDecimal penalty) {
        this.penalty = penalty;
    }
    
    @JsonBackReference
    public Set<Device> getDevices() {
        return devices;
    }
    
    @JsonProperty
    public void setDevices(Set<Device> devices) {
        this.devices = devices;
    }
}