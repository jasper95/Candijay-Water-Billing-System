package com.domain;
// Generated Apr 16, 2015 12:48:29 PM by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;

/**
 * MeterReading generated by hbm2java
 */
@Entity
@Table(name="meter_reading"
    ,catalog="revised_cws_db"
)
public class MeterReading extends AuditableEntity implements java.io.Serializable {
    @Id @GeneratedValue(strategy=IDENTITY)
    @Column(name="id", unique=true, nullable=false)
    private Long id;
    @ManyToOne(fetch=FetchType.EAGER, cascade={CascadeType.PERSIST, CascadeType.MERGE})
    @JoinColumn(name="account_id", nullable=false)
    private Account account;
    @ManyToOne(fetch=FetchType.EAGER, cascade={CascadeType.PERSIST, CascadeType.MERGE})
    @JoinColumn(name="schedule_id", nullable=false)
    private Schedule schedule;
    @Digits(fraction=0, integer=10) @NotNull
    @Column(name="reading_value", nullable=false)
    private Integer readingValue;
    @Column(name="consumption", nullable=false)
    private Integer consumption;
    @OneToOne(fetch=FetchType.EAGER, mappedBy="reading")
    private Invoice invoice;
    
    public MeterReading() {
    }

    public MeterReading(Account account, Schedule schedule, Integer readingValue, Integer consumption, Invoice invoice) {
        this.account = account;
        this.schedule = schedule;
        this.readingValue = readingValue;
        this.consumption = consumption;
        this.invoice = invoice;
    }
    
    public Long getId() {
        return this.id; 
    }
    
    public void setId(Long id) {
        this.id = id;
    }

    @JsonManagedReference
    public Invoice getInvoice() {
        return invoice;
    }
    
    @JsonProperty
    public void setInvoice(Invoice invoice) {
        this.invoice = invoice;
    }

    @JsonManagedReference
    public Account getAccount() {
        return this.account;
    
    }
    @JsonProperty
    public void setAccount(Account account) {
        this.account = account;
    }
    
    @JsonManagedReference
    public Schedule getSchedule() {
        return schedule;
    }
    @JsonProperty
    public void setSchedule(Schedule schedule) {
        this.schedule = schedule;
    }

    public Integer getReadingValue() {
        return this.readingValue;
    }
    
    public void setReadingValue(Integer readingValue) {
        this.readingValue = readingValue;
    }

    public Integer getConsumption() {
        return consumption;
    }

    public void setConsumption(Integer consumption) {
        this.consumption = consumption;
    }

    public Integer getPrevious(){
        return this.readingValue - this.consumption ;
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder(17, 31). // two randomly chosen prime numbers
                // if deriving: appendSuper(super.hashCode()).
                        append(this.id).
                        toHashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final MeterReading other = (MeterReading) obj;
        return new EqualsBuilder().
                append(this.id, other.id).
                isEquals();
    }
}